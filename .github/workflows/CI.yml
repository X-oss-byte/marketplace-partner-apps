name: CI

on:
  push:
    branches: ['main', 'production']
  pull_request:
    types: [opened, synchronize]

env:
  DEFINITIONS_ORG_ID: ${{ secrets.DEFINITIONS_ORG_ID }}
  CONTENTFUL_CMA_TOKEN: ${{ secrets.CONTENTFUL_CMA_TOKEN }}
  TEST_ORG_ID: ${{ secrets.TEST_ORG_ID }}
  TEST_CMA_TOKEN: ${{ secrets.TEST_CMA_TOKEN }}
  HaT_ORG_ID: ${{ secrets.HaT_ORG_ID }}
  HaT_TOKEN: ${{ secrets.HaT_TOKEN }}

jobs:
  build:
    name: Build, Test, Deploy
    timeout-minutes: 15
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v3
        with:
          fetch-depth: 2
      # - name: Setup Node.js environment
      #   uses: actions/setup-node@v3
      #   with:
      #     node-version: 16
      #     cache: 'npm'
      # - name: Install dependencies
      #   run: npm install
      # - name: Build
      #   run: npm run build -- --filter=...[HEAD^1]
      # - name: Test
      #   run: npm run test -- --filter=...[HEAD^1]
      # - name: Deploy Staging
      #   if: ${{ github.ref == 'refs/heads/main' }}
      #   run: npm run deploy:staging -- --filter=...[HEAD^1]
      # - name: Deploy Production
      #   if: ${{ github.ref == 'refs/heads/production' }}
      #   run: npm run deploy -- --filter=...[HEAD^1]
  create-contentful-test-space:
    needs: build
    name: Create Contentful Test Space
    runs-on: ubuntu-latest
    if: ${{ github.ref != 'refs/heads/main' && github.ref != 'refs/heads/production' }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      # - name: Create Test Contentful Space
      #   if: ${{ github.ref != 'refs/heads/main' && github.ref != 'refs/heads/production' }}
      #   v
      #   run: |
      #     output=$( curl -s \
      #         --request POST \
      #         --header 'Authorization: Bearer ${{ secrets.HAT_TOKEN }}' \
      #         --header 'Content-Type: application/vnd.contentful.management.v1+json' \
      #         --header 'X-Contentful-Organization: ${{ secrets.HaT_ORG_ID }}' \
      #         --data-binary '{
      #           "name": "${{ github.ref_name }}",
      #           "defaultLocale": "en"
      #           }' \
      #         https://api.contentful.com/spaces | \
      #         jq -r '.sys.id')
      #     echo "space_id=$output" >> $GITHUB_OUTPUT
      #     echo "space_url=https://app.contentful.com/spaces/$output" >> $GITHUB_OUTPUT
      # - name: Add Team to Test Space
      #   if: ${{ github.ref != 'refs/heads/main' && github.ref != 'refs/heads/production' }}
      #   run: |
      #     curl --request POST \
      #     --header 'Authorization: Bearer ${{ secrets.HAT_TOKEN }}' \
      #     --header 'X-Contentful-Team: ${{ secrets.PRD_ECOSYS_TEAM_ID }}' \
      #     --header 'Content-Type: application/vnd.contentful.management.v1+json' \
      #     --url https://api.contentful.com/spaces/${{steps.create_test_space.outputs.space_id}}/team_space_memberships \
      #     --data '{
      #       "admin": true
      #       }'
      # - name: Create a file with the ref name
      #   id: create_manifest_file
      #   run: |
      #     filename="${{ github.ref }}.txt"
      #     filename="${filename//\//_}"
      #     echo "This is a file with the ref name" > $filename
      #     echo "filename=$filename" >> $GITHUB_OUTPUT
      # - name: Create artifact
      #   uses: actions/upload-artifact@v2
      #   with:
      #     name: ${{steps.create_manifest_file.outputs.filename}}
      #     path: ${{steps.create_manifest_file.outputs.filename}}
      - name: Determine file name
        id: calculate_file_name
        run: |
          filename="${{ github.ref }}.txt"
          filename="${filename//\//_}"
          echo "filename=$filename" >> $GITHUB_OUTPUT
      - name: Download all artifacts and get artifact id
        id: download_artifacts
        run: |
          output=$( curl -L \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}"\
            -H "X-GitHub-Api-Version: 2022-11-28" \
            https://api.github.com/repos/contentful/marketplace-partner-apps/actions/artifacts | \
            jq -r '.artifacts | .[] | select(.name == "${{steps.calculate_file_name.outputs.filename}}") | .id')
          echo $output
          echo "artifact_id=$output" >> $GITHUB_OUTPUT
      - name: Fetch artifact by artfact_id
        id: fetch_artifact
        run: |
          output=$( curl -L \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}"\
            -H "X-GitHub-Api-Version: 2022-11-28" \
            https://api.github.com/repos/contentful/marketplace-partner-apps/actions/artifacts/${{steps.download_artifacts.outputs.artifact_id}})
          echo $output
          echo "file=$output" >> $GITHUB_OUTPUT
      - name: Read file
        run: cat ${{steps.fetch_artifact.outputs.file}}
      # - name: Comment PR
      #   uses: thollander/actions-comment-pull-request@v2
      #   with:
      #     message: |
      #       :tada: Test environment has been created here:
      #       [${{steps.create_test_space.outputs.space_url}}](${{steps.create_test_space.outputs.space_url}})
